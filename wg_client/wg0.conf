# this client config will work with the server config found under /wg_server

[Interface]
PrivateKey = [CLIENT_PRIVATE_KEY]
# set the IP for the client
Address = 10.0.2.2/32
# change DNS to your preferred provider
DNS = 1.1.1.1 
# default MTU will be 1420, but since this is used as a wifi router we need to clamp mss
# this is because clients will have no way to discover MTU
# be sure to change the ethernet device if yours is not eth0
PostUp = iptables -t mangle -A POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o eth0 -j TCPMSS --set-mss 1360
PostDown = iptables -t mangle -D POSTROUTING -p tcp --tcp-flags SYN,RST SYN -o eth0 -j TCPMSS --set-mss 1360

# if you use the following sections, you'll have to change gateway IP and ethernet device below 
# exempt the DNS we use from being tunneled when peer is up
PreUp = ip route add 104.16.133.229/32 via 192.168.2.1 dev eth0
PreUp = ip route add 104.16.132.229/32 via 192.168.2.1 dev eth0
PreUp = ip route add 1.1.1.1/32 via 192.168.2.1 dev eth0
PreUp = ip route add 8.8.8.8/32 via 192.168.2.1 dev eth0
PreUp = ip route add 8.8.4.4/32 via 192.168.2.1 dev eth0

# really we could probably just leave these, but no reason not to be tidy 
PostDown = ip route del 104.16.133.229/32 via 192.168.2.1 dev eth0
PostDown = ip route del 104.16.132.229/32 via 192.168.2.1 dev eth0
PostDown = ip route del 1.1.1.1/32 via 192.168.2.1 dev eth0
PostDown = ip route del 8.8.8.8/32 via 192.168.2.1 dev eth
PostDown = ip route del 8.8.4.4/32 via 192.168.2.1 dev eth0

[Peer]
PublicKey = [SERVER_PUBLIC_KEY]
# we want to tunnel all connections
AllowedIPs = 0.0.0.0/0, ::/0
Endpoint = [HOST]:[PORT]
PersistentKeepalive = 25
